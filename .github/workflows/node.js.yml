# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


#     steps:
#     - uses: actions/checkout@v2
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
# #     - run: npm ci
# #     - run: npm run build --if-present
# #     - run: npm test

# #     - name: Angular Deploy gh-pages Actions
# #       # You may pin to the exact commit or the version.
# #       # uses: AhsanAyaz/angular-deploy-gh-pages-actions@26ffbdb76b46ce3d649d046f1f7f45099654cfd7
# #       uses: AhsanAyaz/angular-deploy-gh-pages-actions@v1.3.1
# #       with:
# #         # Github access token token used to deploy on gh_pages. You can find it on Github.
# #         github_access_token: b4cd65193b19b2e7c06bfdacbc39767024c7b2e2
# #         # The directory of the angular project, in which all the commands will run
# #         angular_project_dir: fuzzy-octo-pancake/
# #         # Build configuration for the angular app
# #         build_configuration: production
# #         # base href for the app
# #         base_href: /fuzzy-octo-pancake/
# #         # branch on which the angular build will be deployed
# #         deploy_branch: gh-pages
# #         # The folder in which `ng build` provides its output. This is the folder which will be deployed to the `deploy_branch`.
# #         angular_dist_build_folder: /
# #         # If the action should run 'ng lint'
# # #         run_lint: true
# #         # Will not fail the step if anything fails
# # #         skip_failure: false

jobs:
  publish:
    runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [14.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Gen dummy page
        run: |
          mkdir public
          cat > public/index.html <<EOL
          <!doctype html>
          <html>
            <head>
              <title>GitHub Pages deployed!</title>
            </head>
            <body>
              <p>GitHub Pages with <strong>${{ github.sha }}</strong> commit ID has been deployed through <a href="https://github.com/marketplace/actions/github-pages">GitHub Pages action</a> successfully.</p>
            </body>
          </html>
          EOL
#       -
#         name: GitHub Pages
#         uses: crazy-max/ghaction-github-pages@v2.2.0
#         with:
#           # GitHub repository where assets will be deployed (default current)
#   #         repo: # optional
#           # Git branch where assets will be deployed
#   #         target_branch: # optional, default is gh-pages
#           # Create incremental commit instead of doing push force
#           keep_history: true
#           # Allow an empty commit to be created
#   #         allow_empty_commit: # optional, default is true
#           # Build directory to deploy
#           build_dir: /
#           # The committer name and email address
#           committer: Ivo Cunha
#           # The author name and email address
#           author: Ivo Cunha
#           # Commit message
#   #         commit_message: # optional
#           # Write the given domain name to the CNAME file
#   #         fqdn: # optional
#           # Allow Jekyll to build your site
#   #         jekyll: # optional, default is true
      -
        name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: /
          author: Ivo Cunha
          committer: Ivo Cunha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
